openapi: 3.0.3
info:
  title: FitnessFormula
  version: 1.0.0
  description: FitnessFormula é um sistema de gerenciamento do relacionamento entre
    personal trainers e alunos. Sendo assim, permite o acesso e a criação de fichas
    de treino, acompanhamento do aluno por meio de relatórios e perfil físico, além
    de prover informações gerais.
paths:
  /api/login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/login/refresh/:
    post:
      operationId: login_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/overview/{overview_id}:
    delete:
      operationId: overview_destroy
      parameters:
      - in: path
        name: overview_id
        schema:
          type: string
        required: true
      tags:
      - overview
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/overview/user:
    get:
      operationId: overview_user_retrieve
      tags:
      - overview
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/overview/user/{student_id}:
    get:
      operationId: overview_user_retrieve_2
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      tags:
      - overview
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: overview_user_create
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      tags:
      - overview
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/ratings/trainer/{trainer_id}/:
    post:
      operationId: ratings_trainer_create
      parameters:
      - in: path
        name: trainer_id
        schema:
          type: string
        required: true
      tags:
      - ratings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
  /api/register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/reports/{id}/:
    get:
      operationId: reports_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: reports_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: reports_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/reports/trainer/:
    get:
      operationId: reports_trainer_list
      tags:
      - reports
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
          description: ''
  /api/reports/user/:
    get:
      operationId: reports_user_retrieve
      tags:
      - reports
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/reports/user/{student_id}/:
    get:
      operationId: reports_user_list
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      tags:
      - reports
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
          description: ''
    post:
      operationId: reports_user_create
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      tags:
      - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/sheets/user/:
    get:
      operationId: sheets_user_retrieve
      tags:
      - sheets
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sheet'
          description: ''
  /api/sheets/user/{student_id}/:
    get:
      operationId: sheets_user_retrieve_2
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      tags:
      - sheets
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sheet'
          description: ''
    post:
      operationId: sheets_user_create
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      tags:
      - sheets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sheet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sheet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sheet'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sheet'
          description: ''
    put:
      operationId: sheets_user_update
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      tags:
      - sheets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sheet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sheet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sheet'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sheet'
          description: ''
    patch:
      operationId: sheets_user_partial_update
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      tags:
      - sheets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSheet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSheet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSheet'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sheet'
          description: ''
    delete:
      operationId: sheets_user_destroy
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      tags:
      - sheets
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/sheets/user/{student_id}/workout/:
    get:
      operationId: sheets_user_workout_list_2
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      tags:
      - sheets
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workout'
          description: ''
    post:
      operationId: sheets_user_workout_create
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      tags:
      - sheets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workout'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
  /api/sheets/user/{student_id}/workout/{workout_id}/:
    get:
      operationId: sheets_user_workout_retrieve
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      - in: path
        name: workout_id
        schema:
          type: string
        required: true
      tags:
      - sheets
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
    put:
      operationId: sheets_user_workout_update
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      - in: path
        name: workout_id
        schema:
          type: string
        required: true
      tags:
      - sheets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workout'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
    patch:
      operationId: sheets_user_workout_partial_update
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      - in: path
        name: workout_id
        schema:
          type: string
        required: true
      tags:
      - sheets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkout'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
    delete:
      operationId: sheets_user_workout_destroy
      parameters:
      - in: path
        name: student_id
        schema:
          type: string
        required: true
      - in: path
        name: workout_id
        schema:
          type: string
        required: true
      tags:
      - sheets
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/sheets/user/workout/:
    get:
      operationId: sheets_user_workout_list
      tags:
      - sheets
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workout'
          description: ''
  /api/users/self/:
    get:
      operationId: users_self_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_self_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_self_partial_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_self_destroy
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/trainers/:
    get:
      operationId: users_trainers_list
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trainer'
          description: ''
  /api/users/trainers/{id}:
    get:
      operationId: users_trainers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trainer'
          description: ''
components:
  schemas:
    DayEnum:
      enum:
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
      - sunday
      type: string
    Exercise:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 120
      required:
      - id
      - title
    MuscleGroupEnum:
      enum:
      - legs
      - arms
      - back
      - chest
      - shoulders
      - cardio
      type: string
    PatchedSheet:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          $ref: '#/components/schemas/TypeEnum'
        created_at:
          type: string
          format: date
          readOnly: true
        until:
          type: string
          format: date
        duration:
          type: string
          readOnly: true
        trainer:
          type: string
          format: uuid
          readOnly: true
        trainer_name:
          type: string
          readOnly: true
        student:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        cpf:
          type: string
          maxLength: 11
          minLength: 11
        password:
          type: string
          writeOnly: true
          maxLength: 128
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        date_joined:
          type: string
          format: date-time
        middle_name:
          type: string
          maxLength: 150
        birthdate:
          type: string
          format: date
    PatchedWorkout:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        muscle_group:
          $ref: '#/components/schemas/MuscleGroupEnum'
        day:
          $ref: '#/components/schemas/DayEnum'
        title:
          type: string
          nullable: true
          maxLength: 120
        description:
          type: string
          nullable: true
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/Workout_exercise'
    Rating:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        comment:
          type: string
          maxLength: 200
        stars:
          allOf:
          - $ref: '#/components/schemas/StarsEnum'
          minimum: 0
          maximum: 32767
        student:
          type: string
          format: uuid
          readOnly: true
        trainer:
          type: string
          format: uuid
          readOnly: true
      required:
      - comment
      - id
      - stars
      - student
      - trainer
    Report:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 50
        description:
          type: string
          maxLength: 250
        date:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        trainer_name:
          type: string
          readOnly: true
        trainer:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
        student:
          type: string
          format: uuid
          readOnly: true
      required:
      - created_at
      - date
      - description
      - id
      - student
      - student_name
      - title
      - trainer
      - trainer_name
      - updated_at
    Sheet:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          $ref: '#/components/schemas/TypeEnum'
        created_at:
          type: string
          format: date
          readOnly: true
        until:
          type: string
          format: date
        duration:
          type: string
          readOnly: true
        trainer:
          type: string
          format: uuid
          readOnly: true
        trainer_name:
          type: string
          readOnly: true
        student:
          type: string
          format: uuid
          readOnly: true
        student_name:
          type: string
          readOnly: true
      required:
      - created_at
      - duration
      - id
      - student
      - student_name
      - trainer
      - trainer_name
      - type
      - until
    StarsEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    Trainer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        rating:
          type: string
          readOnly: true
        cpf:
          type: string
          maxLength: 11
          minLength: 11
        password:
          type: string
          writeOnly: true
          maxLength: 128
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        date_joined:
          type: string
          format: date-time
        middle_name:
          type: string
          maxLength: 150
        birthdate:
          type: string
          format: date
      required:
      - birthdate
      - cpf
      - id
      - password
      - rating
      - username
    TypeEnum:
      enum:
      - hypertrophy
      - fat_loss
      - keep_in_shape
      - bodybuilder
      type: string
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        cpf:
          type: string
          maxLength: 11
          minLength: 11
        password:
          type: string
          writeOnly: true
          maxLength: 128
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        date_joined:
          type: string
          format: date-time
        middle_name:
          type: string
          maxLength: 150
        birthdate:
          type: string
          format: date
      required:
      - birthdate
      - cpf
      - id
      - password
      - username
    Workout:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        muscle_group:
          $ref: '#/components/schemas/MuscleGroupEnum'
        day:
          $ref: '#/components/schemas/DayEnum'
        title:
          type: string
          nullable: true
          maxLength: 120
        description:
          type: string
          nullable: true
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/Workout_exercise'
      required:
      - day
      - exercises
      - id
      - muscle_group
    Workout_exercise:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        exercise:
          $ref: '#/components/schemas/Exercise'
        equipment:
          type: string
          nullable: true
          maxLength: 120
        description:
          type: string
          nullable: true
        sets:
          type: integer
          maximum: 2147483647
          minimum: 0
        reps:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - exercise
      - id
      - reps
      - sets
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
